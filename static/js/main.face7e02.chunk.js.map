{"version":3,"sources":["Components/Icons.js","Components/CornerButton.js","Components/GoogleMaps/MapComponent.js","Components/InfoBox/InfoDisplay.js","data/initialLocation.js","data/steps.js","App.js","serviceWorker.js","index.js"],"names":["rotate","keyframes","dash","SVG","styled","svg","attrs","props","xmlns","width","size","height","viewBox","fill","stroke","SpinnerSVGCircle","circle","spinning","Spinner","color","useState","activeTime","setActiveTime","activeTimeRef","useRef","current","isSpinning","deactivate","Date","onClick","setTimeout","useEffect","cx","cy","r","Wrapper","span","CornerButton","defaultStyles","require","MapComponent","compose","withProps","googleMapURL","loadingElement","style","containerElement","mapElement","withScriptjs","withGoogleMap","zoom","defaultOptions","styles","disableDefaultUI","options","Object","assign","openMarker","setOpenedMarker","clickMarker","i","map","setMap","panTo","center","location","ref","el","markers","marker","disabled","icon","url","key","position","onCloseClick","label","InfoDisplayDiv","div","CurrentMessage","p","OldMessage","InfoDisplay","currentStep","steps","displayIndex","Math","min","length","currentMessage","oldMessages","slice","messageEnd","setMessageEnd","scrollIntoView","behavior","message","initialLocation","lat","lng","step","text","zoomLevel","mapCenter","Link","href","children","target","App","texts","stepNumber","setStepNumber","setLocation","setZoom","setMarkers","n","activateStep","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.face7e02.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotate = keyframes`\n  100% {\n    transform: rotate(360deg);\n}\n`;\n\nconst dash = keyframes`\n0% {\n    stroke-dasharray: 1, 150;\n    stroke-dashoffset: 0;\n  }\n  50% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -35;\n  }\n  100% {\n    stroke-dasharray: 90, 150;\n    stroke-dashoffset: -124;\n  }\n`;\n\nconst SVG = styled.svg.attrs(props => ({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: props.size,\n  height: props.size,\n  viewBox: \"0 0 24 24\"\n}))`\n  fill: ${props => props.fill};\n  stroke: ${props => props.stroke};\n  animation: ${rotate} 2s linear infinite;\n`;\n\nconst SpinnerSVGCircle = styled.circle`\n  stroke: hsl(210, 70, 75);\n  stroke-linecap: round;\n\n  animation: ${dash} 1.5s ease-in-out;\n  animation-name: ${props => (props.spinning ? dash : \"none\")};\n`;\n\nexport const Spinner = ({ size = 40, color = \"white\" }) => {\n  const [activeTime, setActiveTime] = useState(null);\n  const activeTimeRef = useRef(activeTime);\n  activeTimeRef.current = activeTime;\n  const spinningTime = 2000;\n  const isSpinning = activeTime !== null;\n\n  const deactivate = () => {\n    const isAlreadyDeactivated = !activeTimeRef.current;\n    if (isAlreadyDeactivated) {\n      return;\n    }\n    const now = new Date();\n    const newerDeactivateTaskLoaded =\n      now - activeTimeRef.current < spinningTime;\n    if (newerDeactivateTaskLoaded) {\n      return;\n    }\n    setActiveTime(null);\n  };\n  const onClick = () => {\n    setActiveTime(new Date());\n    setTimeout(deactivate, spinningTime);\n  };\n\n  useEffect(onClick, []);\n\n  return (\n    <SVG size={size} onClick={onClick}>\n      <SpinnerSVGCircle\n        spinning={isSpinning}\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        fill=\"none\"\n        stroke={color}\n      ></SpinnerSVGCircle>\n    </SVG>\n  );\n};\n","import React  from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spinner } from \"./Icons\";\n\nconst Wrapper = styled.span`\n  position: fixed;\n  right: 15px;\n  padding: 0;\n  bottom: 15px;\n  z-index: 10;\n  width: 40px;\n  height: 40px;\n\n  & > * {\n    user-select: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n`;\n\nexport const CornerButton = ({ onClick } = {}) => {\n  return (\n    <Wrapper onClick={onClick}>\n      <Spinner />\n    </Wrapper>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\n\nconst defaultStyles = require(\"./styles.json\");\n\nexport const MapComponent = compose(\n  withProps({\n    /**\n     * Note: create and replace your own key in the Google console.\n     * https://console.developers.google.com/apis/dashboard\n     * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n     */\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDQdayjPFPUGwZauhSZzOH5iFZpGbUZKyw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100vh` }} />,\n    containerElement: <div style={{ height: `100vh` }} />,\n    mapElement: <div style={{ height: `100vh` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => {\n  const zoom = props.zoom || 12;\n  const defaultOptions = {\n    styles: defaultStyles,\n    disableDefaultUI: true,\n    zoom\n  };\n  const options = Object.assign({}, defaultOptions, props.options || {});\n  const [openMarker, setOpenedMarker] = useState(-1);\n  const clickMarker = i => {\n    setOpenedMarker(openMarker === i ? -1 : i);\n  };\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    map.panTo(props.panTo);\n  }, [props.panTo]);\n\n  return (\n    <GoogleMap\n      center={props.location}\n      zoom={zoom}\n      defaultOptions={options}\n      ref={el => setMap(el)}\n    >\n      {props.markers.map((marker, i) => {\n        if (marker.disabled) {\n          return null;\n        }\n        const icon = {\n          url:\n            \"http://maps.google.com/mapfiles/ms/\" +\n            `icons/${marker.color || \"yellow\"}-dot.png`\n        };\n        return (\n          <Marker\n            key={i}\n            position={marker.location}\n            icon={icon}\n            onClick={() => clickMarker(i)}\n          >\n            {openMarker === i && (\n              <InfoWindow onCloseClick={() => clickMarker(i)}>\n                <span>{marker.label}</span>\n              </InfoWindow>\n            )}\n          </Marker>\n        );\n      })}\n    </GoogleMap>\n  );\n});\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst InfoDisplayDiv = styled.div`\n  width: 100%;\n  min-height: 70px;\n  max-height: 100px;\n  overflow: scroll;\n  position: fixed;\n  left: 0;\n  bottom: 0;\n\n  background-color: rgba(0, 0, 0, 0.8);\n  padding: 0.6rem;\n  padding-right: 70px;\n`;\n\nconst CurrentMessage = styled.p`\n  color: white;\n  text-align: center;\n  margin: 0;\n  padding: 5px 0 10px;\n`;\nconst OldMessage = styled(CurrentMessage)`\n  opacity: 0.4;\n  padding: 5px 0;\n`;\n\nexport const InfoDisplay = ({ currentStep, steps } = {}) => {\n  const displayIndex = Math.min(currentStep, steps.length - 1);\n  const currentMessage = steps[displayIndex];\n  const oldMessages = steps.slice(0, displayIndex);\n  const [messageEnd, setMessageEnd] = useState(null);\n\n  useEffect(() => {\n    if (messageEnd) {\n      messageEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [currentMessage]);\n\n  return (\n    <InfoDisplayDiv>\n      {oldMessages.map((message, i) => (\n        <OldMessage key={i}>{message}</OldMessage>\n      ))}\n      <CurrentMessage ref={el => setMessageEnd(el)}>\n        {currentMessage}\n      </CurrentMessage>\n    </InfoDisplayDiv>\n  );\n};\n","export const initialLocation = { lat: 52.3545983, lng: 4.8739213 };\nexport const initialZoom = 12;\n","import React from \"react\";\n\nconst step = (text, { markers, zoomLevel, mapCenter } = {}) => ({\n  text,\n  mapCenter,\n  zoomLevel,\n  markers: markers || []\n});\n\nconst Link = ({ href, children }) => (\n  <a href={href} target=\"_blank\">\n    {children}\n  </a>\n);\n\nexport const steps = [\n  step(\n    <>\n      Du er invitert til Amsterdam.\n      <br />\n      <small>klikk på sirkelen ➡️</small>\n    </>\n  ),\n  step(\"Flyet lander torsdag 16. januar, kl. 17:25.\", {\n    mapCenter: { lat: 52.3105386, lng: 4.7660857 },\n    zoomLevel: 13,\n    markers: [\n      {\n        label: \"Schiphol Amsterdam Airport\",\n        location: { lat: 52.3105386, lng: 4.7660857 }\n      }\n    ]\n  }),\n\n  step(\"...og letter mandag 20. januar, kl. 18:10\", {\n    mapCenter: { lat: 52.3405386, lng: 4.8260857 },\n    zoomLevel: 12\n  }),\n  step(\"Vi skal bo på et billig, shabby, supersentralt hotel.\", {\n    zoomLevel: 13,\n    mapCenter: { lat: 52.373706, lng: 4.890148 },\n    markers: [\n      {\n        label: \"Boutique Hotel La Belle Vue\",\n        location: { lat: 52.373706, lng: 4.890148 },\n        color: \"red\"\n      }\n    ]\n  }),\n  step(\n    <>\n      Da bor vi nært det som skjer denne siste helgen av{\" \"}\n      <Link href=\"https://amsterdamlightfestival.com/en/\">\n        Amsterdam lysfestival.\n      </Link>\n    </>,\n    {\n      mapCenter: { lat: 52.370706, lng: 4.900148 },\n      markers: [\n        {\n          label: \"ARTIS Amsterdam Royal Zoo\",\n          location: { lat: 52.365889, lng: 4.916554 }\n        },\n        {\n          label: \"Amsterdam Light Festival Cruise\",\n          location: { lat: 52.364667, lng: 4.879696 }\n        }\n      ]\n    }\n  ),\n  step(\n    <>\n      Jeg gleder meg spesielt til å se{\" \"}\n      <Link href=\"https://www.skalar.art/\">SKALAR</Link> på lørdag!\n    </>,\n    {\n      zoomLevel: 14,\n      mapCenter: { lat: 52.376706, lng: 4.885148 },\n      markers: [\n        {\n          label: \"Gashouder westergasfabriek\",\n          location: { lat: 52.386356, lng: 4.875391 }\n        }\n      ]\n    }\n  ),\n  step(\"Det er god mat og drikke i nærheten!\", {\n    mapCenter: { lat: 52.373483, lng: 4.888163 },\n    markers: [\n      {\n        label: \"A Taste Of Amsterdam Food Tour\",\n        location: { lat: 52.375048, lng: 4.896282 }\n      },\n      {\n        label: \"Bagels & Beans\",\n        location: { lat: 52.373483, lng: 4.888163 }\n      },\n      {\n        label: \"PANCAKES Amsterdam Westermarkt\",\n        location: { lat: 52.374793, lng: 4.884022 }\n      },\n      {\n        label: \"Pulitzer's Bar\",\n        location: { lat: 52.372653, lng: 4.884607 }\n      }\n    ]\n  }),\n  step(\"Og det er disco like ved!\", {\n    markers: [\n      {\n        label: \"The Smallest Disco in the World\",\n        location: { lat: 52.3666975, lng: 4.8920318 },\n        color: \"blue\"\n      },\n      {\n        label: \"Club Mystique\",\n        location: { lat: 52.378311, lng: 4.89472 },\n        color: \"blue\"\n      },\n      {\n        label: \"Warehouse Elementenstraat\",\n        location: { lat: 52.3938179, lng: 4.8496236 },\n        color: \"blue\"\n      }\n    ]\n  }),\n  step(\"...kanskje også se noen shady steder?\", {\n    markers: [\n      {\n        label: \"Red light bar\",\n        location: { lat: 52.3726666, lng: 4.8948655 },\n        color: \"pink\"\n      },\n      {\n        label: \"Barneys Coffeshop\",\n        location: { lat: 52.380627, lng: 4.8888053 },\n        color: \"pink\"\n      },\n      {\n        label: \"Grey Area Coffeeshop\",\n        location: { lat: 52.374665, lng: 4.8866712 },\n        color: \"pink\"\n      }\n    ]\n  }),\n\n  step(\"Så hva sier du? Vil du bli med?\", {\n    zoomLevel: 13,\n    mapCenter: { lat: 52.373706, lng: 4.890148 }\n  }),\n  step(\n    <>\n      <Link href=\"https://www.messenger.com/t/tomas.a.fagerbekk\">\n        Send meg melding\n      </Link>{\" \"}\n      da vel!\n    </>\n  ),\n  step(\"God jul 🎄\")\n];\n","import React, { useEffect, useState } from \"react\";\n\nimport { CornerButton } from \"./Components/CornerButton\";\n\nimport \"./App.css\";\n\nimport { MapComponent } from \"./Components/GoogleMaps/MapComponent\";\nimport { InfoDisplay } from \"./Components/InfoBox/InfoDisplay\";\n\nimport { initialLocation, initialZoom } from \"./data/initialLocation\";\nimport { steps } from \"./data/steps\";\n\nconst App = () => {\n  const texts = steps.map(step => step.text);\n\n  const [stepNumber, setStepNumber] = useState(0);\n  const [location, setLocation] = useState(initialLocation);\n  const [zoom, setZoom] = useState(initialZoom);\n  const [markers, setMarkers] = useState([]);\n\n  const activateStep = n => {\n    if (steps.length > n) {\n      const step = steps[n];\n      if (step.zoomLevel) {\n        setZoom(step.zoomLevel);\n      }\n      if (step.mapCenter) {\n        setLocation(step.mapCenter);\n      }\n      if (step.markers) {\n        setMarkers([...markers, ...step.markers]);\n      }\n    }\n  };\n\n  useEffect(() => activateStep(stepNumber), [stepNumber]);\n\n  return (\n    <div>\n      <MapComponent\n        location={initialLocation}\n        panTo={location}\n        zoom={zoom}\n        markers={markers}\n      />\n      <InfoDisplay currentStep={stepNumber} steps={texts} />\n      <CornerButton onClick={() => setStepNumber(stepNumber + 1)} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}